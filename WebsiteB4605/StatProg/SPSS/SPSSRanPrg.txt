
From tavery@mun.ca Mon Apr  8 10:36:29 2002
Date: Mon, 08 Apr 2002 10:06:48 -02-30
From: T Avery <tavery@mun.ca>
To: David Schneider <a84dcs@morgan.ucs.mun.ca>
Cc: ings@mun.ca
Subject: randomization

I've attached an spss randomization syntax file. It is well commented and 
has several "save" and "get" files in it that are not necessary, but I 
include them so one can look at the data stepwise.

There is a random "sample" routine in SPSS as well, but I have only just 
become aware of it and I don't know if it samples without replacement (I 
assume it doesn't).

I also tweaked the code to only randomly sample within each day for the 
randomization. This constrains the randomization within each day as, in my 
dataset, the first 3 days have a much narrower range of values than later 
days. Optionally, I could (and did) run the test using all data resampled 
from the same pool regardless of which day it came from originally. Both 
give very similar results.

The final part of the syntax gives the p-value for the test that is 
calculated from the cumulative total of difference values greater than the 
difference from teh first t-test (0.0825 in this case).

cheers,
trevor
  [ Part 2: "Attached Text" ]

Comment This program demonstrates a randomization test. 105 cases are read in and 
duplicated N times ( N=1000 in this example). For the original data the 
means for each group are computed and printed. The program then 
manipulates the data to compute the difference between the 
group means for each of the N random groupings and displays the frequency 
with which different values were obtained.

Comment This starts the work of the program. The original data is read below 
and duplicated N-times. The iterat variable keeps track of which iteration 
of the data is used. The randnum variable is used later to assign cases to 
a particular group later in the program. Variables that start with a # are 
temporary and do not come into play later.

SET format=F8.4.

INPUT PROGRAM.
Data list fixed / #group 1 #day 3 #xval 5-10 (4).
loop #i=1 to 1000.
Compute randnum=rv.uniform(0,1).
Compute iterat=#i.
Compute group=#group .
Compute day=#day.
Compute xval=#xval .
End Case.
End loop.
End input program.
begin data
1 1 0.1914
1 1 0.0721
1 1 0.1644
1 1 0.0793
1 1 0.0775
1 2 0.3389
1 2 0.1337
1 2 0.6764
1 2 0.3626
1 2 0.2235
1 3 0.3837
1 3 0.2244
1 3 0.8384
1 3 0.4794
1 3 0.2676
1 4 0.4407
1 4 0.2519
1 4 0.9030
1 4 0.6470
1 4 0.2741
1 5 0.4869
1 5 0.3142
1 5 0.9336
1 5 0.6792
1 5 0.2837
1 6 0.5039
1 6 0.3142
1 6 0.9662
1 6 0.6956
1 6 0.2837
1 7 0.5277
1 7 0.3142
1 7 0.9662
1 7 0.7094
1 7 0.2837
2 1 0.1218
2 1 0.2172
2 1 0.2584
2 1 0.5495
2 1 0.0187
2 1 0.1229
2 1 0.1911
2 1 0.2077
2 1 0.2614
2 1 0.0831
2 2 0.2152
2 2 0.3889
2 2 0.5185
2 2 0.6585
2 2 0.0771
2 2 0.2703
2 2 0.3796
2 2 0.2795
2 2 0.2807
2 2 0.1978
2 3 0.2706
2 3 0.5135
2 3 0.5247
2 3 0.6885
2 3 0.0849
2 3 0.2973
2 3 0.4036
2 3 0.3101
2 3 0.3518
2 3 0.2091
2 4 0.2958
2 4 0.5135
2 4 0.5781
2 4 0.6929
2 4 0.0960
2 4 0.2973
2 4 0.4536
2 4 0.3344
2 4 0.3634
2 4 0.2207
2 5 0.2958
2 5 0.5135
2 5 0.5781
2 5 0.6929
2 5 0.0984
2 5 0.2973
2 5 0.4536
2 5 0.3344
2 5 0.3634
2 5 0.2262
2 6 0.2958
2 6 0.5135
2 6 0.5781
2 6 0.6929
2 6 0.1167
2 6 0.2973
2 6 0.4536
2 6 0.3344
2 6 0.3634
2 6 0.2262
2 7 0.2958
2 7 0.5135
2 7 0.5781
2 7 0.6929
2 7 0.1288
2 7 0.2973
2 7 0.4536
2 7 0.3344
2 7 0.3634
2 7 0.2262
end data.

Comment The data has now been read in. We select out the first iteration and 
calculate means by group.

save outfile='e:\temp\morts.sav'.
get file='e:\temp\morts.sav'.
temporary.
select if (iterat eq 1).
t-test groups = group (1,2) / variables=xval.

Comment Now we sort by the value of randnum to "scramble" the data within each 
iteration and use the case number supplied by SPSS to assign the first 
two cases within each iteration to group 1 and the rest to group 2. The $CASENUM 
variable is supplied by SPSS automatically.

comment get file='e:\temp\morts.sav'.
sort cases by iterat day randnum.
compute randgrp=1.

Comment Note there are 105 observations in each iteration and 
35 cases in the first group. We must label the first 5 cases in
each day of each iteration as randgrp1 and the last 10 as randgrp2.

if ($Casenum GT (((iterat-1)*105) + ((day-1)*15) +5)) randgrp=2.
list  /cases=50.

save outfile='e:\temp\morts2.sav'.

Comment Now we use the aggregate command to compute the mean for group 1
in each of the N iterations/randomizations. We save the results in a 
file named group1.sav for use later.

temporary.
select if (randgrp eq 1).
aggregate outfile='e:\temp\mort1.sav' 
/break=iterat
/group1x=mean(xval) 
/count1=n(xval).

Comment Repeat it for group 2.
temporary.
select if (randgrp eq 2).
aggregate outfile='e:\temp\mort2.sav' 
/break=iterat
/group2x=mean(xval) 
/count2=n(xval).

Comment Now that we merge together the two output files from the aggregate
runs by iteration. We need this if we are going to compute the difference 
between means.

MATCH FILES FILE='e:\temp\mort1.sav'
/ File='e:\temp\mort2.sav'
/ BY iterat .

save outfile='e:\temp\mort3.sav'.

Comment Compute the difference in the group means
get file='e:\temp\mort3.sav'.
compute diff1 = ABS(group1x-group2x).
if (diff1 GT 0.08825) p=1/1000.
list /cases=50.
save outfile='e:\temp\mort4.sav'.

get file='e:\temp\mort4.sav'.

Comment As a last step, print out the frequency distribution for Differ

frequencies diff1 /format=notable /histogram.

descriptives / p
  /statistics = sum.
